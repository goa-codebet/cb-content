#!/usr/bin/env node
const csvtojson = require('csvtojson');
const contentful = require('contentful-management')
const axios = require('axios');
const Papa = require('papaparse');
const { Command } = require('commander');
const { findOrCreateEntry } = require('./utils');
const fs = require('fs')

const main = async ({source, sheet = '', environmentId = 'master', spaceId, languages, accessToken }) => {
  
  const getSource = async (source, sheet) => {
    // If source starts with ./ or / expect file
    if (source.match(/^(.\/|\/)/)) {
      const res = fs.readFileSync(source, 'utf8')
      return res;
    }
    else {
      if (sheet)
        sheet = `&sheet=${sheet}`
        
      var url = `https://docs.google.com/spreadsheets/d/${source}/gviz/tq?tqx=out:csv${sheet}`;
      var res = await axios.get(url)
      return res.data
    }
  }
    
  const contentfulClient = await contentful.createClient({ accessToken })
  const client =  await contentfulClient
    .getSpace(spaceId)
    .then(s => s.getEnvironment(environmentId))
    .catch(e => console.log(e))

  // Better logic here. Check total from response
  const [ entries1, entries2 ] = await Promise.all([
    client.getEntries({
      limit: 1000,
      'content_type': 'translation',
    }),
    client.getEntries({
      limit: 1000,
      skip: 1000,
      'content_type': 'translation',
    })
  ]);

  const entries = [
    ...entries1.items,
    ...entries2.items
  ];

  var res = await getSource(source, sheet);
  var input = await csvtojson().fromString(res);
  const headers = ['identifier', ...languages];
  const csv = []
  input.forEach(item => {
    const row = [item.identifier]
    const entry = entries.find(e => e.fields && e.fields.identifier && e.fields.identifier["en-US"] === item.identifier)
    
    if (entry) {
      languages.forEach(l => {
        row.push(entry.fields.translation && entry.fields.translation[l] 
          ? entry.fields.translation[l].trim()  // Replace new line if it's the last char...
          : ''
        )
      })
    }
    csv.push(row)
  })

  console.log(Papa.unparse(csv))
}

const program = new Command();
program
  .requiredOption('-t, --accessToken <accessToken>', 'Content Management Token')
  .requiredOption('-s, --spaceId <spaceId>', 'Space Id')
  .requiredOption('--source <source>', 'Google Sheet Id or file')
  .option('-e, --environmentId <environmentId>', 'Environment Id')
  .option('--tab <tab>', 'Google Sheet Tab')

program.parseAsync(process.argv);

main({
  accessToken: program.accessToken,
  spaceId: program.spaceId,
  environmentId: program.environmentId,
  source: program.source,
  sheet: program.tab,
  languages: program.args,
})
